<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{ title }}</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/pico.min.css">
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

  <div class="container"> 
    <h1>{{ title }}</h1>
    
    <input type="text" id="search-input" placeholder="Buscar juegos...">
      <select id="software-filter">
      <option value="">All</option>
      <option value="SteamVR">SteamVR</option>
      <option value="Monado">Monado</option>
      <option value="ALVR">ALVR</option>
      <option value="wivrn">wivrn</option>
      </select>


      <select id="rating-filter" disabled>
      <option value="">Any</option>
      <option value="1">Perfect</option>
      <option value="2">Requires manual configuration or better</option>
      <option value="3">Playable with graphical/controller issues or better</option>
      <option value="4">Unplayable because of graphical/controller issues or better</option>
      <option value="5">Crashes or won't start or better</option>
      </select>

  </div>


<section>
  <div id="game-list" class="container game-list">
    {% for games in collections.gamesList %}
    <a href="{{ games.url | url }}" class="game-link">
      <article class="game-card">
        
        <img class="game-img" src="{{ games.data.image }}" alt="Descripción de {{ games.data.title }}" >
        <div class="game-info">
            
            <h3>{{ games.data.title }}</h3>
                    <div class="rating-container">
                        {% set steamVR_total = 0 %}
                        {% set monado_total = 0 %}
                        {% set alvr_total = 0 %}
                        {% set wivrn_total = 0 %}
                        {% set opinions_count = games.data.opinions | length %}

                        {% for opinion in games.data.opinions %}
                        
                        {% set steamVR_total = steamVR_total + opinion.steamVR %}
                        
                        {% set monado_total = monado_total + opinion.monado %}
                        {% set alvr_total = alvr_total + opinion.alvr %}
                        {% set wivrn_total = wivrn_total + opinion.wivrn %}
                        {% endfor %}

                        {% set steamVR_avg = steamVR_total / opinions_count %}

                        {% set monado_avg = monado_total / opinions_count %}
                        {% set alvr_avg = alvr_total / opinions_count %}
                        {% set wivrn_avg = wivrn_total / opinions_count %}                        



                        <table class="rating-table">
                            <tr class="software-list">
                                <td class="rating-text">SteamVR</td>
                                <td class="rating-text">Monado</td>
                                <td class="rating-text">ALVR</td>
                                <td class="rating-text">wivrn</td>
                            </tr>
<tr class="rating-list">
    {% set icons = {
        '1': 'fa-solid fa-face-laugh-beam',
        '2': 'fa-solid fa-face-smile',
        '3': 'fa-solid fa-face-meh',
        '4': 'fa-solid fa-face-frown',
        '5': 'fa-solid fa-face-angry'
    } %}

    <td>
        {% set steamVR_avg_rounded = steamVR_avg | round %}
        {% if steamVR_avg_rounded %}
            <i class="rating rating-{{ steamVR_avg_rounded }} {{ icons[steamVR_avg_rounded|string] }} icon-dark icon-size" title="Media: {{ steamVR_avg_rounded }}"></i>
        {% else %}
            <i class="rating rating-unknown fa-solid fa-circle-question icon-dark icon-size" ></i>
        {% endif %}
    </td>

    <td>
        {% set monado_avg_rounded = monado_avg | round %}
        {% if monado_avg_rounded %}
            <i class="rating rating-{{ monado_avg_rounded }} {{ icons[monado_avg_rounded|string] }} icon-dark icon-size" title="Media: {{ monado_avg_rounded }}"></i>
        {% else %}
            <i class="rating rating-unknown fa-solid fa-circle-question icon-dark icon-size" ></i>
        {% endif %}
    </td>

    <td>
        {% set alvr_avg_rounded = alvr_avg | round %}
        {% if alvr_avg_rounded %}
            <i class="rating rating-{{ alvr_avg_rounded }} {{ icons[alvr_avg_rounded|string] }} icon-dark icon-size" title="Media: {{ alvr_avg_rounded }}"></i>
        {% else %}
            <i class="rating rating-unknown fa-solid fa-circle-question icon-dark icon-size" ></i>
        {% endif %}
    </td>

    <td>
        {% set wivrn_avg_rounded = wivrn_avg | round %}
        {% if wivrn_avg_rounded %}
            <i class="rating rating-{{ wivrn_avg_rounded }} {{ icons[wivrn_avg_rounded|string] }} icon-dark icon-size" title="Media: {{ wivrn_avg_rounded }}"></i>
        {% else %}
            <i class="rating rating-unknown fa-solid fa-circle-question icon-dark icon-size" ></i>
        {% endif %}
    </td>
</tr>
                        </table>
                    </div>
                
        </div>
      </article>
      </a>
    {% endfor %}
  </div>
</section>

<script>
function applyFilters() {
  const softwareValue = document.getElementById('software-filter').value.toLowerCase();
  const ratingFilter = document.getElementById('rating-filter');
  const ratingValue = parseFloat(ratingFilter.value);
  const searchValue = document.getElementById('search-input').value.toLowerCase(); 

  const games = document.querySelectorAll('.game-card');

  if (softwareValue === "") {
    ratingFilter.value = "";
    ratingFilter.disabled = true;

    games.forEach(game => {
      const gameTitle = game.querySelector('h3').innerText.toLowerCase();
      if (searchValue === "" || gameTitle.includes(searchValue)) {
        game.parentElement.style.display = ''; 
      } else {
        game.parentElement.style.display = 'none'; 
      }
    });
    return; 
  } else {
    ratingFilter.disabled = false;
  }

  games.forEach(game => {
    const gameInfo = game.querySelector('.game-info').innerText.toLowerCase();
    const gameTitle = game.querySelector('h3').innerText.toLowerCase();

    // Aquí filtramos por la clase 'rating-X', donde X es el valor de la media
    const ratings = game.querySelectorAll('.rating');
    const satisfiesSoftware = gameInfo.includes(softwareValue);
    const satisfiesSearch = searchValue === "" || gameTitle.includes(searchValue);

    let satisfiesRating = true;

    // Mapa de ratings y software 
    const softwareList = game.querySelectorAll('.software-list td');
    const ratingList = game.querySelectorAll('.rating-list td');
    const ratingMap = new Map();
    softwareList.forEach((sft, k) => {

      const classList = Array.from(ratingList[k].querySelector('i').classList);
      const ratingClass = classList.find(c => c.startsWith('rating-'));
      const ratingNumber = parseInt(ratingClass.split('-')[1]);

      ratingMap.set(sft.innerText.toLowerCase(), ratingNumber);
    });

    // Aunque a este caso nunca se podría llegar ahora mismo, porque el filtro de rating
    // está deshabilitado hasta que se indica un software en el filtro de software.
    if (ratingValue && !softwareValue && !searchValue) {
      satisfiesRating = ratingMap.values().some(rating => {
        // Aquí comprobamos si la clase 'rating-X' existe para el valor que queremos
        return rating <= ratingValue;
      });
    } else if (ratingValue && softwareValue && !searchValue) {
      satisfiesRating = ratingMap.has(softwareValue) && ratingMap.get(softwareValue) <= ratingValue;
    }

    $satisfiesRating = satisfiesSearch && satisfiesSoftware && satisfiesRating;

    if (satisfiesSoftware && satisfiesRating && satisfiesSearch) {
      game.parentElement.style.display = ''; 
    } else {
      game.parentElement.style.display = 'none'; 
    }
  });
}

document.getElementById('software-filter').addEventListener('change', applyFilters);
document.getElementById('rating-filter').addEventListener('change', applyFilters);
document.getElementById('search-input').addEventListener('input', applyFilters);

</script>



  
</body>
</html>
